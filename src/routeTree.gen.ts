/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ErrorImport } from './routes/error'
import { Route as DashRouteImport } from './routes/dash/route'
import { Route as WwwRouteImport } from './routes/_www/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as DashIndexImport } from './routes/dash/index'
import { Route as WwwIndexImport } from './routes/_www/index'
import { Route as LegalTermsImport } from './routes/legal/terms'
import { Route as LegalPrivacyImport } from './routes/legal/privacy'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthResetPasswordImport } from './routes/_auth/reset-password'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'

// Create/Update Routes

const ErrorRoute = ErrorImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRoute,
} as any)

const DashRouteRoute = DashRouteImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => rootRoute,
} as any)

const WwwRouteRoute = WwwRouteImport.update({
  id: '/_www',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashIndexRoute = DashIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashRouteRoute,
} as any)

const WwwIndexRoute = WwwIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WwwRouteRoute,
} as any)

const LegalTermsRoute = LegalTermsImport.update({
  id: '/legal/terms',
  path: '/legal/terms',
  getParentRoute: () => rootRoute,
} as any)

const LegalPrivacyRoute = LegalPrivacyImport.update({
  id: '/legal/privacy',
  path: '/legal/privacy',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_www': {
      id: '/_www'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WwwRouteImport
      parentRoute: typeof rootRoute
    }
    '/dash': {
      id: '/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashRouteImport
      parentRoute: typeof rootRoute
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorImport
      parentRoute: typeof rootRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthRouteImport
    }
    '/legal/privacy': {
      id: '/legal/privacy'
      path: '/legal/privacy'
      fullPath: '/legal/privacy'
      preLoaderRoute: typeof LegalPrivacyImport
      parentRoute: typeof rootRoute
    }
    '/legal/terms': {
      id: '/legal/terms'
      path: '/legal/terms'
      fullPath: '/legal/terms'
      preLoaderRoute: typeof LegalTermsImport
      parentRoute: typeof rootRoute
    }
    '/_www/': {
      id: '/_www/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof WwwIndexImport
      parentRoute: typeof WwwRouteImport
    }
    '/dash/': {
      id: '/dash/'
      path: '/'
      fullPath: '/dash/'
      preLoaderRoute: typeof DashIndexImport
      parentRoute: typeof DashRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface WwwRouteRouteChildren {
  WwwIndexRoute: typeof WwwIndexRoute
}

const WwwRouteRouteChildren: WwwRouteRouteChildren = {
  WwwIndexRoute: WwwIndexRoute,
}

const WwwRouteRouteWithChildren = WwwRouteRoute._addFileChildren(
  WwwRouteRouteChildren,
)

interface DashRouteRouteChildren {
  DashIndexRoute: typeof DashIndexRoute
}

const DashRouteRouteChildren: DashRouteRouteChildren = {
  DashIndexRoute: DashIndexRoute,
}

const DashRouteRouteWithChildren = DashRouteRoute._addFileChildren(
  DashRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof WwwRouteRouteWithChildren
  '/dash': typeof DashRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/sign-up': typeof AuthSignUpRoute
  '/legal/privacy': typeof LegalPrivacyRoute
  '/legal/terms': typeof LegalTermsRoute
  '/': typeof WwwIndexRoute
  '/dash/': typeof DashIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/sign-up': typeof AuthSignUpRoute
  '/legal/privacy': typeof LegalPrivacyRoute
  '/legal/terms': typeof LegalTermsRoute
  '/': typeof WwwIndexRoute
  '/dash': typeof DashIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_www': typeof WwwRouteRouteWithChildren
  '/dash': typeof DashRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/legal/privacy': typeof LegalPrivacyRoute
  '/legal/terms': typeof LegalTermsRoute
  '/_www/': typeof WwwIndexRoute
  '/dash/': typeof DashIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dash'
    | '/error'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/sign-up'
    | '/legal/privacy'
    | '/legal/terms'
    | '/'
    | '/dash/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/error'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/sign-up'
    | '/legal/privacy'
    | '/legal/terms'
    | '/'
    | '/dash'
  id:
    | '__root__'
    | '/_auth'
    | '/_www'
    | '/dash'
    | '/error'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/reset-password'
    | '/_auth/sign-up'
    | '/legal/privacy'
    | '/legal/terms'
    | '/_www/'
    | '/dash/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  WwwRouteRoute: typeof WwwRouteRouteWithChildren
  DashRouteRoute: typeof DashRouteRouteWithChildren
  ErrorRoute: typeof ErrorRoute
  LegalPrivacyRoute: typeof LegalPrivacyRoute
  LegalTermsRoute: typeof LegalTermsRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  WwwRouteRoute: WwwRouteRouteWithChildren,
  DashRouteRoute: DashRouteRouteWithChildren,
  ErrorRoute: ErrorRoute,
  LegalPrivacyRoute: LegalPrivacyRoute,
  LegalTermsRoute: LegalTermsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_www",
        "/dash",
        "/error",
        "/legal/privacy",
        "/legal/terms"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/reset-password",
        "/_auth/sign-up"
      ]
    },
    "/_www": {
      "filePath": "_www/route.tsx",
      "children": [
        "/_www/"
      ]
    },
    "/dash": {
      "filePath": "dash/route.tsx",
      "children": [
        "/dash/"
      ]
    },
    "/error": {
      "filePath": "error.tsx"
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx",
      "parent": "/_auth"
    },
    "/legal/privacy": {
      "filePath": "legal/privacy.tsx"
    },
    "/legal/terms": {
      "filePath": "legal/terms.tsx"
    },
    "/_www/": {
      "filePath": "_www/index.tsx",
      "parent": "/_www"
    },
    "/dash/": {
      "filePath": "dash/index.tsx",
      "parent": "/dash"
    }
  }
}
ROUTE_MANIFEST_END */
