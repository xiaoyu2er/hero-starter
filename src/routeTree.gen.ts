/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashRouteImport } from './routes/dash/route'
import { Route as DashIndexImport } from './routes/dash/index'
import { Route as WwwIndexImport } from './routes/_www/index'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create/Update Routes

const DashRouteRoute = DashRouteImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => rootRoute,
} as any)

const DashIndexRoute = DashIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashRouteRoute,
} as any)

const WwwIndexRoute = WwwIndexImport.update({
  id: '/_www/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dash': {
      id: '/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_www/': {
      id: '/_www/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof WwwIndexImport
      parentRoute: typeof rootRoute
    }
    '/dash/': {
      id: '/dash/'
      path: '/'
      fullPath: '/dash/'
      preLoaderRoute: typeof DashIndexImport
      parentRoute: typeof DashRouteImport
    }
  }
}

// Create and export the route tree

interface DashRouteRouteChildren {
  DashIndexRoute: typeof DashIndexRoute
}

const DashRouteRouteChildren: DashRouteRouteChildren = {
  DashIndexRoute: DashIndexRoute,
}

const DashRouteRouteWithChildren = DashRouteRoute._addFileChildren(
  DashRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/dash': typeof DashRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof WwwIndexRoute
  '/dash/': typeof DashIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof WwwIndexRoute
  '/dash': typeof DashIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/dash': typeof DashRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_www/': typeof WwwIndexRoute
  '/dash/': typeof DashIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dash' | '/login' | '/signup' | '/' | '/dash/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/signup' | '/' | '/dash'
  id:
    | '__root__'
    | '/dash'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_www/'
    | '/dash/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashRouteRoute: typeof DashRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  WwwIndexRoute: typeof WwwIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashRouteRoute: DashRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  WwwIndexRoute: WwwIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/dash",
        "/_auth/login",
        "/_auth/signup",
        "/_www/"
      ]
    },
    "/dash": {
      "filePath": "dash/route.tsx",
      "children": [
        "/dash/"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_www/": {
      "filePath": "_www/index.tsx"
    },
    "/dash/": {
      "filePath": "dash/index.tsx",
      "parent": "/dash"
    }
  }
}
ROUTE_MANIFEST_END */
